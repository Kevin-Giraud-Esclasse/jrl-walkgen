// This file is generated by omniidl (C++ backend)- omniORB_4_0. Do not edit.

#include "walkpluginJRL.h"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_0;



walkpluginJRL_ptr walkpluginJRL_Helper::_nil() {
  return ::walkpluginJRL::_nil();
}

CORBA::Boolean walkpluginJRL_Helper::is_nil(::walkpluginJRL_ptr p) {
  return CORBA::is_nil(p);

}

void walkpluginJRL_Helper::release(::walkpluginJRL_ptr p) {
  CORBA::release(p);
}

void walkpluginJRL_Helper::duplicate(::walkpluginJRL_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void walkpluginJRL_Helper::marshalObjRef(::walkpluginJRL_ptr obj, cdrStream& s) {
  ::walkpluginJRL::_marshalObjRef(obj, s);
}

walkpluginJRL_ptr walkpluginJRL_Helper::unmarshalObjRef(cdrStream& s) {
  return ::walkpluginJRL::_unmarshalObjRef(s);
}

walkpluginJRL_ptr
walkpluginJRL::_duplicate(::walkpluginJRL_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


walkpluginJRL_ptr
walkpluginJRL::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


walkpluginJRL_ptr
walkpluginJRL::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


walkpluginJRL_ptr
walkpluginJRL::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_walkpluginJRL _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_walkpluginJRL* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_walkpluginJRL;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* walkpluginJRL::_PD_repoId = "IDL:walkpluginJRL:1.0";


_objref_walkpluginJRL::~_objref_walkpluginJRL() {}


_objref_walkpluginJRL::_objref_walkpluginJRL(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::walkpluginJRL::_PD_repoId, ior, id, 1),
   _objref_Plugin(ior, id)
   
{
  _PR_setobj(this);
}

void*
_objref_walkpluginJRL::_ptrToObjRef(const char* id)
{
  if( id == ::walkpluginJRL::_PD_repoId )
    return (::walkpluginJRL_ptr) this;
  if( id == ::Plugin::_PD_repoId )
    return (::Plugin_ptr) this;

  if( id == ::CommandReceiver::_PD_repoId )
    return (::CommandReceiver_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::walkpluginJRL::_PD_repoId) )
    return (::walkpluginJRL_ptr) this;
  if( omni::strMatch(id, ::Plugin::_PD_repoId) )
    return (::Plugin_ptr) this;

  if( omni::strMatch(id, ::CommandReceiver::_PD_repoId) )
    return (::CommandReceiver_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cfloat_i_cfloat_i_cfloat
class _0RL_cd_bd2897e33721d236_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBA::Float arg_0;
  CORBA::Float arg_1;
  CORBA::Float arg_2;
};

void _0RL_cd_bd2897e33721d236_00000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_bd2897e33721d236_00000000::unmarshalArguments(cdrStream& _n)
{
  (CORBA::Float&)arg_0 <<= _n;
  (CORBA::Float&)arg_1 <<= _n;
  (CORBA::Float&)arg_2 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setTargetPos(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setTargetPos(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_10000000, "setTargetPos", 13);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setTargetPosNoWait(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setTargetPosNoWait(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_20000000, "setTargetPosNoWait", 19);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setArc(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setArc(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_30000000, "setArc", 7);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setArcNoWait(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setArcNoWait(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_40000000, "setArcNoWait", 13);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setRfootPos(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setRfootPos(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_50000000, "setRfootPos", 12);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setRfootPosNoWait(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setRfootPosNoWait(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_60000000, "setRfootPosNoWait", 18);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setLfootPos(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setLfootPos(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_70000000, "setLfootPos", 12);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setLfootPosNoWait(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setLfootPosNoWait(CORBA::Float x, CORBA::Float y, CORBA::Float th)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_80000000, "setLfootPosNoWait", 18);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;
  _call_desc.arg_2 = th;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _clong_o_cdsequence
class _0RL_cd_bd2897e33721d236_90000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_90000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  dsequence_var arg_0;
  CORBA::Long result;
};

void _0RL_cd_bd2897e33721d236_90000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  (const dsequence&) arg_0 >>= _n;

}

void _0RL_cd_bd2897e33721d236_90000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBA::Long&)result <<= _n;
  arg_0 = new dsequence;
  (dsequence&)arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_90000000* tcd = (_0RL_cd_bd2897e33721d236_90000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  tcd->result = impl->getLegJointSpeed(tcd->arg_0.out());


}

CORBA::Long _objref_walkpluginJRL::getLegJointSpeed(dsequence_out dq)
{
  _0RL_cd_bd2897e33721d236_90000000 _call_desc(_0RL_lcfn_bd2897e33721d236_a0000000, "getLegJointSpeed", 17);


  _invoke(_call_desc);
  dq = _call_desc.arg_0._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_bd2897e33721d236_b0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_b0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
    
  
  
};

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_c0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->stopWalking();


}

void _objref_walkpluginJRL::stopWalking()
{
  _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_c0000000, "stopWalking", 12);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_d0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->waitArrival();


}

void _objref_walkpluginJRL::waitArrival()
{
  _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_d0000000, "waitArrival", 12);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_e0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->startStepping();


}

void _objref_walkpluginJRL::startStepping()
{
  _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_e0000000, "startStepping", 14);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_f0000000(omniCallDescriptor*, omniServant* svnt)
{
  
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->stopStepping();


}

void _objref_walkpluginJRL::stopStepping()
{
  _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_f0000000, "stopStepping", 13);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_00000000* tcd = (_0RL_cd_bd2897e33721d236_00000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setWalkingVelocity(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::setWalkingVelocity(CORBA::Float dx, CORBA::Float dy, CORBA::Float dth)
{
  _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_01000000, "setWalkingVelocity", 19);
  _call_desc.arg_0 = dx;
  _call_desc.arg_1 = dy;
  _call_desc.arg_2 = dth;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void_o_cfloat_o_cfloat_o_cfloat
class _0RL_cd_bd2897e33721d236_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_11000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::Float arg_0;
  CORBA::Float arg_1;
  CORBA::Float arg_2;
};

void _0RL_cd_bd2897e33721d236_11000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_bd2897e33721d236_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBA::Float&)arg_0 <<= _n;
  (CORBA::Float&)arg_1 <<= _n;
  (CORBA::Float&)arg_2 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_11000000* tcd = (_0RL_cd_bd2897e33721d236_11000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->getWaistVelocity(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_walkpluginJRL::getWaistVelocity(CORBA::Float& vx, CORBA::Float& vy, CORBA::Float& omega)
{
  _0RL_cd_bd2897e33721d236_11000000 _call_desc(_0RL_lcfn_bd2897e33721d236_21000000, "getWaistVelocity", 17);


  _invoke(_call_desc);
  vx = _call_desc.arg_0;
  vy = _call_desc.arg_1;
  omega = _call_desc.arg_2;


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cTransformQuaternion_o_cfloat
class _0RL_cd_bd2897e33721d236_31000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_31000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  TransformQuaternion arg_0_;
  TransformQuaternion* arg_0;
  CORBA::Float arg_1;
};

void _0RL_cd_bd2897e33721d236_31000000::marshalReturnedValues(cdrStream& _n)
{
  (const TransformQuaternion&) *arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_bd2897e33721d236_31000000::unmarshalReturnedValues(cdrStream& _n)
{
  (TransformQuaternion&)*arg_0 <<= _n;
  (CORBA::Float&)arg_1 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_41000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_31000000* tcd = (_0RL_cd_bd2897e33721d236_31000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->getWaistPositionAndOrientation(*tcd->arg_0, tcd->arg_1);


}

void _objref_walkpluginJRL::getWaistPositionAndOrientation(TransformQuaternion& aTQ, CORBA::Float& Orientation)
{
  _0RL_cd_bd2897e33721d236_31000000 _call_desc(_0RL_lcfn_bd2897e33721d236_41000000, "getWaistPositionAndOrientation", 31);
  _call_desc.arg_0 = &(TransformQuaternion&) aTQ;

  _invoke(_call_desc);
  Orientation = _call_desc.arg_1;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_cTransformQuaternion
class _0RL_cd_bd2897e33721d236_51000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_51000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  TransformQuaternion arg_0_;
  const TransformQuaternion* arg_0;
};

void _0RL_cd_bd2897e33721d236_51000000::marshalArguments(cdrStream& _n)
{
  (const TransformQuaternion&) *arg_0 >>= _n;

}

void _0RL_cd_bd2897e33721d236_51000000::unmarshalArguments(cdrStream& _n)
{
  (TransformQuaternion&)arg_0_ <<= _n;
  arg_0 = &arg_0_;

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_61000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_51000000* tcd = (_0RL_cd_bd2897e33721d236_51000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->setWaistPositionAndOrientation(*tcd->arg_0);


}

void _objref_walkpluginJRL::setWaistPositionAndOrientation(const TransformQuaternion& aTQ)
{
  _0RL_cd_bd2897e33721d236_51000000 _call_desc(_0RL_lcfn_bd2897e33721d236_61000000, "setWaistPositionAndOrientation", 31);
  _call_desc.arg_0 = &(TransformQuaternion&) aTQ;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void_o_cTransformQuaternion
class _0RL_cd_bd2897e33721d236_71000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_71000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  TransformQuaternion arg_0_;
  TransformQuaternion* arg_0;
};

void _0RL_cd_bd2897e33721d236_71000000::marshalReturnedValues(cdrStream& _n)
{
  (const TransformQuaternion&) *arg_0 >>= _n;

}

void _0RL_cd_bd2897e33721d236_71000000::unmarshalReturnedValues(cdrStream& _n)
{
  (TransformQuaternion&)*arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_71000000* tcd = (_0RL_cd_bd2897e33721d236_71000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  impl->getWaistAcceleration(*tcd->arg_0);


}

void _objref_walkpluginJRL::getWaistAcceleration(TransformQuaternion& aTQ)
{
  _0RL_cd_bd2897e33721d236_71000000 _call_desc(_0RL_lcfn_bd2897e33721d236_81000000, "getWaistAcceleration", 21);
  _call_desc.arg_0 = &(TransformQuaternion&) aTQ;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_bd2897e33721d236_91000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_91000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::Boolean result;
};

void _0RL_cd_bd2897e33721d236_91000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_bd2897e33721d236_91000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_a1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_91000000* tcd = (_0RL_cd_bd2897e33721d236_91000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  tcd->result = impl->isWalking();


}

CORBA::Boolean _objref_walkpluginJRL::isWalking()
{
  _0RL_cd_bd2897e33721d236_91000000 _call_desc(_0RL_lcfn_bd2897e33721d236_a1000000, "isWalking", 10);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring
class _0RL_cd_bd2897e33721d236_b1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_bd2897e33721d236_b1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::String_var arg_0_;
  const char* arg_0;
  CORBA::Boolean result;
};

void _0RL_cd_bd2897e33721d236_b1000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_bd2897e33721d236_b1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_bd2897e33721d236_b1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_bd2897e33721d236_b1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_bd2897e33721d236_c1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_bd2897e33721d236_b1000000* tcd = (_0RL_cd_bd2897e33721d236_b1000000*)cd;
  _impl_walkpluginJRL* impl = (_impl_walkpluginJRL*) svnt->_ptrToInterface(walkpluginJRL::_PD_repoId);
  tcd->result = impl->ParseCmd(tcd->arg_0);


}

CORBA::Boolean _objref_walkpluginJRL::ParseCmd(const char* aCmd)
{
  _0RL_cd_bd2897e33721d236_b1000000 _call_desc(_0RL_lcfn_bd2897e33721d236_c1000000, "ParseCmd", 9);
  _call_desc.arg_0 = aCmd;

  _invoke(_call_desc);
  return _call_desc.result;


}
_pof_walkpluginJRL::~_pof_walkpluginJRL() {}


omniObjRef*
_pof_walkpluginJRL::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_walkpluginJRL(ior, id);
}


CORBA::Boolean
_pof_walkpluginJRL::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::walkpluginJRL::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, Plugin::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, CommandReceiver::_PD_repoId) )
    return 1;


  return 0;
}

const _pof_walkpluginJRL _the_pof_walkpluginJRL;

_impl_walkpluginJRL::~_impl_walkpluginJRL() {}


CORBA::Boolean
_impl_walkpluginJRL::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "setTargetPos") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_10000000, "setTargetPos", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setTargetPosNoWait") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_20000000, "setTargetPosNoWait", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setArc") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_30000000, "setArc", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setArcNoWait") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_40000000, "setArcNoWait", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setRfootPos") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_50000000, "setRfootPos", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setRfootPosNoWait") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_60000000, "setRfootPosNoWait", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setLfootPos") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_70000000, "setLfootPos", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setLfootPosNoWait") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_80000000, "setLfootPosNoWait", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getLegJointSpeed") ) {

    _0RL_cd_bd2897e33721d236_90000000 _call_desc(_0RL_lcfn_bd2897e33721d236_a0000000, "getLegJointSpeed", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "stopWalking") ) {

    _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_c0000000, "stopWalking", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "waitArrival") ) {

    _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_d0000000, "waitArrival", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "startStepping") ) {

    _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_e0000000, "startStepping", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "stopStepping") ) {

    _0RL_cd_bd2897e33721d236_b0000000 _call_desc(_0RL_lcfn_bd2897e33721d236_f0000000, "stopStepping", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setWalkingVelocity") ) {

    _0RL_cd_bd2897e33721d236_00000000 _call_desc(_0RL_lcfn_bd2897e33721d236_01000000, "setWalkingVelocity", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getWaistVelocity") ) {

    _0RL_cd_bd2897e33721d236_11000000 _call_desc(_0RL_lcfn_bd2897e33721d236_21000000, "getWaistVelocity", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getWaistPositionAndOrientation") ) {

    _0RL_cd_bd2897e33721d236_31000000 _call_desc(_0RL_lcfn_bd2897e33721d236_41000000, "getWaistPositionAndOrientation", 31, 1);
    _call_desc.arg_0 = &_call_desc.arg_0_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setWaistPositionAndOrientation") ) {

    _0RL_cd_bd2897e33721d236_51000000 _call_desc(_0RL_lcfn_bd2897e33721d236_61000000, "setWaistPositionAndOrientation", 31, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getWaistAcceleration") ) {

    _0RL_cd_bd2897e33721d236_71000000 _call_desc(_0RL_lcfn_bd2897e33721d236_81000000, "getWaistAcceleration", 21, 1);
    _call_desc.arg_0 = &_call_desc.arg_0_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "isWalking") ) {

    _0RL_cd_bd2897e33721d236_91000000 _call_desc(_0RL_lcfn_bd2897e33721d236_a1000000, "isWalking", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "ParseCmd") ) {

    _0RL_cd_bd2897e33721d236_b1000000 _call_desc(_0RL_lcfn_bd2897e33721d236_c1000000, "ParseCmd", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if( _impl_Plugin::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((_impl_Plugin*)this)->
      _impl_Plugin::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
_impl_walkpluginJRL::_ptrToInterface(const char* id)
{
  if( id == ::walkpluginJRL::_PD_repoId )
    return (::_impl_walkpluginJRL*) this;
  if( id == ::Plugin::_PD_repoId )
    return (::_impl_Plugin*) this;

  if( id == ::CommandReceiver::_PD_repoId )
    return (::_impl_CommandReceiver*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::walkpluginJRL::_PD_repoId) )
    return (::_impl_walkpluginJRL*) this;
  if( omni::strMatch(id, ::Plugin::_PD_repoId) )
    return (::_impl_Plugin*) this;

  if( omni::strMatch(id, ::CommandReceiver::_PD_repoId) )
    return (::_impl_CommandReceiver*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_walkpluginJRL::_mostDerivedRepoId()
{
  return ::walkpluginJRL::_PD_repoId;
}

POA_walkpluginJRL::~POA_walkpluginJRL() {}

